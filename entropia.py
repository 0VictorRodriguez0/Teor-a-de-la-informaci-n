# -*- coding: utf-8 -*-
"""entropia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jQMKTj6_xdjqhL61nOZ1-z98CUfvEm9a
"""

import math
import random

#Entropia de shannon
def EntropiaConocida(probabilidad):
  E = -(math.log(probabilidad, 2))
  return E

def EntropiaAleatoria(probabilidades):
  k = len(probabilidades)
  suma = 0
  for i in range(0,k):
    # print(i)
    if probabilidades[i] > 0:
      Ek = probabilidades[i] * math.log(probabilidades[i], 2)
      suma = suma + Ek
  return -suma

#EJEMPLO EntropiaConocida
moneda = 1/2
E1 = EntropiaConocida(moneda)
dado = 1/6
E2 = EntropiaConocida(dado)
print("EJEMPLO EntropiaConocida")
print("Entropia moneda: ",E1)
print("Entropia dado: ",E2)
print("")

#EJEMPLO EntropiaAleatoria
probabilidades = [0.3, 0.4, 0.2, 0.1]
entropia = EntropiaAleatoria(probabilidades)
print("EJEMPLO EntropiaAleatoria")
print("probabilidades: ",probabilidades)
print(entropia)
print("")

#EJEMPLO EntropiaAleatoria
print("EJEMPLO EntropiaAleatoria")
UMBRAL = 15
MAX = 20
#Sacar valores aleatorios del 1 a MAX
lista_valores = [random.randint(1, MAX) for _ in range(10)]
print("valores: ",lista_valores)
proba = 1/((MAX - UMBRAL)+1)
print("probabilidad: ",proba)

#prboabilidades lista
PL = []
#comprobar los  numeros que superan el UMBRAL
for i in range(0,len(lista_valores)):

  if lista_valores[i] >= UMBRAL:
    PL.append(proba)
  else:
    PL.append(0)

print("probabilidades lista: ", PL)
#aplicacion de la formula de entropia
entropiaA = EntropiaAleatoria(PL)
print("entropia de shannon:",entropiaA)
print("")